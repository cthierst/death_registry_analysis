---
title: "Data on Death Registrations Illustrates Issues with Ontario's Records Maintenance"
author: "Chloe Thierstein"
thanks: "Code and data are available at: https://github.com/cthierst/death_registry_analysis.git."
date: "24 January 2023"
date-format: "D MMMM YYYY"
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence. - The abstract should be three or four sentences. The abstract must tell the reader the top-level finding. What is the one thing that we learn about the world because of this paper?"
format: pdf
bibliography: references.bib
---

```{r}
#| include: false

#### Workspace Set-up ####

#### install.packages(tidyverse) ####
#### install.packages(janitor) ####
#### install.packages(ggplot2) ####
#### install.packages("knitr") ####
#### install.packages("RColorBrewer") ####
#### install.packages("kableExtra") ####
#### install.packages("bookdown") ####
#### install.packages("rmarkdown") ####
#### install.packages("patchwork") ####

library(tidyverse)
library(opendatatoronto)
library(janitor)
library(ggplot2)
library(dplyr)
library(knitr)
library(RColorBrewer)
library(kableExtra)
library(bookdown)
library(patchwork)

```

# Introduction

two or three paragraphs of content. and there should be an additional final paragraph that sets out the remainder of the paper

You can and should cross-reference sections and sub-sections. For instance, Section \@ref(data). Quarto automatically makes the sections lower case and adds a dash to spaces to generate labels, for instance, Section \@ref(first-discussion-point).

\-\-\-\-\-\-\-\-\--

During the period of 2011 and 2020, it is estimated that on average just under 100 thousand people died each year in Ontario, Canada [@citestatscan1]. The province of Ontario represents the location of a large portion of deaths in Canada as it takes on an estimated 37% of all deaths in Canada from 2011-2020 [@citestatscan1]. From 2011 to 2020, the population in Ontario has grown from over 13 million to just under 15 million [@citestatscan2]. Significantly, the city of Toronto makes up approximately 44% of the population of Ontario [@citestatscan2].

\-\-\-\-\-\-\-\-\-\--

In this paper I will be analyzing death registry data from four civic centers in the greater Toronto area, Etobicoke, North York, and Scarborough. First, I will compare rates of death registration from these civic centers over the period of 2011-2020. Next, I will compare rates of death registration against place of death in order to discuss the rate of deaths inside and outside the Toronto city limits. Finally, I will discuss trends in death registrations from each civic center.

\-\-\-\-\-\-\-\-\--

# Data

data section should thoroughly and precisely discuss the source of the data and the bias this brings (ethical, statistical, and otherwise). comprehensively describe and summarize the data using text, graphs, and tables must be made iwth knitr or gt. graphs must show the actual data, or as close to it as possible, not summary statistics. (Graphs and tables should be cross-references in the text e.g., 'Table 1 shows...')

\-\-\-\-\-\-\-\-\-\-\--

Analysis for this paper utilizes R the statistical programming language [@citeR], along with several packages. These packages are, tidyverse [@citetidyverse], janitor [@citejanitor], and dplyr [@citedplyr]. The data I am analyzing come from Open Data Toronto and it is imported using the opendatatoronto package [@citeopendatatoronto]. **All figures in this paper have been created using ggplot2 [@citeggplot2] and the tables have been created with knitr [@citeknitr] and kableExtra [@citekablextra], packages. The color styles in my graph were created by using the RColorBrewer [@citercolorbrewer] package and any graph combinations were made using the Patchwork [@citepatchwork] package.**

\-\-\-\-\-\-\-\-\-\-\--

The data I am analyzing comes from Registry Services staff located in three of the civic centers (Etobicoke, North York, Scarborough) and

\-\-\-\-\-\-\-\-\-\-\--

"This dataset includes information relating to the registration of deaths documented by Registry Services staff located in four of the civic centres (Scarborough, North York, Toronto and Etobicoke). Registration of death data is entered into the Registry Services Tracking System (RSTS), from which aggregate statistical information is generated to create the dataset. The dataset resides in an Oracle database in the City's environment.

\-\-\--

The data I am analyzing comes from death registrations which are entered into the Registry Services Tracking System (RSTS) by Registry Services staff located at three of the civic centres (Etobicoke, North York, Scarborough) .

@citeopendatatoronto2

\-\-\--

The dataset is created in support of the Vital Statistics Act, which is a Provincial legislation. The dataset also supports the City's operational requirements and business functions." [@citeopendatatoronto]

"\_id = unique row identifier for Open Data database

civic_centre = civic centre code

death licenses = number of deaths registered in the month

place_of_death = place where death occurred

time_period = month death registered" [@citeopendatatoronto]

\-\-\-\-\-\-\-\-\-\-\-\-\-\--

```{r}
#| include: FALSE

#### Read in Data ####

raw_death_registry_data <-
  read_csv(
    file = 
      "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/cba07a90-984b-42d2-9131-701c8c2a9788/resource/cc418325-b3d0-4afd-ae64-ccb9b71c549c/download/Death%20Registry%20Statistics%20Data.csv",
    show_col_types = FALSE,
    skip = 0
  )

#### Creating a CSV File for Raw Data ####
write_csv(
  x = raw_death_registry_data,
  file = "death_registry.csv" #create raw data .csv file and store it in inputs folder
)



```

```{r}
#| include: false

#### Data Cleaning ####

#### Clean Names ####
cleaned_death_registry_data <-
  clean_names(raw_death_registry_data)

#### Simplifying Date #### 
cleaned_death_registry_data <-
  cleaned_death_registry_data |>
  separate(
    col = time_period,
    into = c("Year", "Month"),
    sep = "-"
  ) |>
  select(civic_centre, death_licenses, place_of_death, Year, Month)

#### Removing 2011-2015 and 2021-2023 Data for Relevance ####
cleaned_death_registry_data <- cleaned_death_registry_data[-c(1:371,746:847), ] 

#### Recoding Months to be More Meaningful ####
cleaned_death_registry_data <- cleaned_death_registry_data |> 
  mutate( 
    Month = 
      recode( 
        Month, #abbreviated months to better fit graphs withotu losing meaning
        "01" = "Jan", 
        "02" = "Feb", 
        "03" = "Mar",
        "04" = "Apr",
        "05" = "May",
        "06" = "Jun",
        "07" = "Jul",
        "08" = "Aug",
        "09" = "Sep",
        "10" = "Oct",
        "11" = "Nov",
        "12" = "Dec"
      ) 
  )

#### Recoding Civic Centres to be More Meaningful ####
cleaned_death_registry_data <- cleaned_death_registry_data |> 
  mutate( 
    civic_centre = 
      recode( 
        civic_centre, 
        "ET" = "Etobicoke", 
        "NY" = "North York", 
        "SC" = "Scarborough", 
      ) 
  )

#### Ordering Months #####
cleaned_death_registry_data$Month <- factor(cleaned_death_registry_data$Month, levels=c("Jan", "Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))


#### Filtering Out "Toronto" Civic Centre from Data Due to Missing Data ####
cleaned_death_registry_data <- cleaned_death_registry_data |>
  filter(!grepl('TO', civic_centre))

#### Creating a CSV File for Cleaned Data ####
write_csv(
  x = cleaned_death_registry_data,
  file = "cleaned_death_registry.csv"  #create cleaned data .csv file and store it in inputs folder
)



```

([@fig-deathlicensesbymonthandyear])

```{r}
#| echo: false
#| warning: false
#| label: fig-deathlicensesbymonthandyear
#| fig-cap: "Death Licenses Given Out by Month from 2016-2020 at Three Toronto Civic Centres"

#### Creating Graph to Compare Months Against Death Licenses Given Out From 2016-2020, Including Visualization of Years ####

ggplot(data=cleaned_death_registry_data, aes(x = Month, y = death_licenses, fill = Year)) +
  theme_classic() +
  geom_bar(stat = "identity") +
  labs(
    x = "Month",
    y = "Death Licenses"
  ) +
  scale_fill_brewer(palette = "Set3")

```

```{r}
#| echo: false
#| warning: false
#| label: fig-deathlicensesbyyearsolid
#| fig-cap: "Death Licenses Given Out by All Civic Centres Yearly From 2016-2020 "

#### Creating Graph to Compare Years Against Death Licenses Given Out From 2016-2020 ####

ggplot(data=cleaned_death_registry_data, aes(x = Year, y = death_licenses, fill = Year)) +
  geom_bar(stat = "identity") +
  theme_classic() + 
  labs(
    x = "Year",
    y = "Death Licenses"
  ) +
  theme(legend.position = "none")+
  scale_fill_brewer(palette="Set3")
```

```{r}
#| include: false


#### Creating Graph to Compare Months Against Death Licenses Given Out From 2016-2020 From Each Civic Centre ####

month_by_death_license <- ggplot(data=cleaned_death_registry_data, aes(x = Month, y = death_licenses, fill = civic_centre)) + #assign ggplot to new variable in order to use patchwork package later
  geom_bar(stat = "identity") +
  theme_classic() + 
  labs(
    x = "Month",
    y = "Death Licenses",
    fill = "Civic Centre"
  ) +
  scale_fill_brewer(palette="Set2")+
  theme(legend.position = "none") + #remove legend as next graph will have it for better readability
    theme(axis.title.y = element_text(size = 10))+
    theme(axis.title.x = element_text(size = 10))

#### Creating Graph to Compare Years Against Death Licenses Given Out From 2016-2020 From Each Civic Centre ####

year_by_death_license <-  ggplot(data=cleaned_death_registry_data, aes(x = Year, y = death_licenses, fill = civic_centre)) + #assign ggplot to new variable in order to use patchwork package later
  geom_bar(stat = "identity") +
  theme_classic() + 
  labs(
    x = "Year",
    y = "Death Licenses",
    fill = "Civic Centre"
  )+
  scale_fill_brewer(palette="Set2")+
  theme(legend.position = "bottom") + #include legend at bottom to ensure readability when using patchwork package
  theme(axis.title.y = element_text(size = 10))+
  theme(axis.title.x = element_text(size = 10))
```

```{r}
#| echo: false
#| warning: false
#| label: fig-deathlicensesmonthly
#| fig-cap: "Death Licenses Given Out by Each Civic Centre Yearly and Monthly Over the Period of 2016-2020"

#### Using Patchwork Package to Combine Two Graphs ####

(month_by_death_license) / (year_by_death_license) +
  plot_annotation(tag_levels = 'A') +
  plot_layout(ncol = 1)
```

\newpage

```{r}
#| include: false

#### Creating Datasets for 5 Year Period by Month at Etobicoke Civic Centre ####

#### Repeat Process for Each Year (2016-2020) ####

#### 2016 ####
et_avg_num_deaths_by_month_2016 <-cleaned_death_registry_data |>
  filter(Year == "2016" | civic_centre == "Etobicoke") |> #filter for year and civic centre
  group_by(Month) |> #group by month
  summarize("Average # of Deaths Registered" = mean(death_licenses)) #find average of death licenses given out 

#### 2017 ####
et_avg_num_deaths_by_month_2017 <-cleaned_death_registry_data |>
  filter(Year == "2017" | civic_centre == "Etobicoke") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2018 ####
et_avg_num_deaths_by_month_2018 <-cleaned_death_registry_data |>
  filter(Year == "2018" | civic_centre == "Etobicoke") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2019 ####
et_avg_num_deaths_by_month_2019 <-cleaned_death_registry_data |>
  filter(Year == "2019" | civic_centre == "Etobicoke") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2020 ####
et_avg_num_deaths_by_month_2020 <-cleaned_death_registry_data|>
  filter(Year == "2020" | civic_centre == "Etobicoke") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses))



```

```{r}
#| include: false

#### Combining Datasets for 5 Year Period by Month at Etobicoke Civic Centre ####

#### After 1st Instance (2016), Repeat 2nd Instance Process for Each Year (2017-2020) ####

#### 2016 ####
et_all_avg_num_deaths_by_month_data <- #new dataset
  et_avg_num_deaths_by_month_2016 |> #start with first dataset in this spot
  left_join(et_avg_num_deaths_by_month_2016, by = "Month") #use left_join() to combine dataset

#### 2017 ####
et_all_avg_num_deaths_by_month_data <- 
  et_all_avg_num_deaths_by_month_data |> #for second and all following datasets use "new" dataset in this position
  left_join(et_avg_num_deaths_by_month_2017, by = "Month")

#### 2018 ####
et_all_avg_num_deaths_by_month_data <- 
  et_all_avg_num_deaths_by_month_data |>
  left_join(et_avg_num_deaths_by_month_2018, by = "Month")

#### 2019 ####
et_all_avg_num_deaths_by_month_data <- 
  et_all_avg_num_deaths_by_month_data |>
  left_join(et_avg_num_deaths_by_month_2019, by = "Month")

#### 2020 ####
et_all_avg_num_deaths_by_month_data <-
  et_all_avg_num_deaths_by_month_data |>
  left_join(et_avg_num_deaths_by_month_2020, by = "Month") 

```

```{r}
#| echo: false
#| warning: false
#| label: tbl-avgnumofdeathsmonthet
#| tbl-cap: "Average Number of Deaths Per Month from 2016-2020 at Etobicoke Centre"

#### Creating a Table to Demonstrate Average Number of Deaths Per Month from 2016-2020 at Etobicoke Centre ####

et_all_avg_num_deaths_by_month_data|>
  select(Month, "Average # of Deaths Registered.y","Average # of Deaths Registered.x.x", "Average # of Deaths Registered.y.y", "Average # of Deaths Registered.x.x.x", "Average # of Deaths Registered.y.y.y")|> #previous step created a duplicate column, use select() to remove the second column in dataset
     kable(
    col.names = c( #rename columns to be more meaningful
      "Month",
      "2016",
      "2017",
      "2018",
      "2019",
      "2020"
    ),
    digits = 0,
    booktabs = TRUE,
    linesep = "") |>
    add_header_above(c(" " = 1, "Average Number of Deaths" = 5)) |>
  kable_styling(full_width = TRUE)



```

```{r}
#| include: false

#### Creating Datasets for 5 Year Period by Month at Scarborough Civic Centre ####

#### After 1st Instance (2016), Repeat 2nd Instance Process for Each Year (2017-2020) ####

#### 2016 ####
sc_avg_num_deaths_by_month_2016 <-cleaned_death_registry_data |>
  filter(Year == "2016" | civic_centre == "Scarborough") |> #filter for year and civic centre
  group_by(Month) |>  #group by month
  summarize("Average # of Deaths Registered" = mean(death_licenses)) #find average of death licenses given out

#### 2017 ####
sc_avg_num_deaths_by_month_2017 <-cleaned_death_registry_data |>
  filter(Year == "2017" | civic_centre == "Scarborough") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2018 ####
sc_avg_num_deaths_by_month_2018 <-cleaned_death_registry_data |>
  filter(Year == "2018" | civic_centre == "Scarborough") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2019 ####
sc_avg_num_deaths_by_month_2019 <-cleaned_death_registry_data |>
  filter(Year == "2019" | civic_centre == "Scarborough") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2020 ####
sc_avg_num_deaths_by_month_2020 <-cleaned_death_registry_data|>
  filter(Year == "2020" | civic_centre == "Scarborough") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses))

```

```{r}
#| include: false

#### Combining Datasets for 5 Year Period by Month at Scarborough Civic Centre ####

#### After 1st Instance (2016), Repeat 2nd Instance Process for Each Year (2017-2020) ####

#### 2016 ####
sc_all_avg_num_deaths_by_month_data <- #new dataset
  sc_avg_num_deaths_by_month_2016 |> #start with first dataset in this spot
  left_join(sc_avg_num_deaths_by_month_2016, by = "Month") #use left_join() to combine dataset

#### 2017 ####
sc_all_avg_num_deaths_by_month_data <- 
  sc_all_avg_num_deaths_by_month_data |> #for second and all following datasets use "new" dataset in this position
  left_join(sc_avg_num_deaths_by_month_2017, by = "Month") 

#### 2018 ####
sc_all_avg_num_deaths_by_month_data <- 
  sc_all_avg_num_deaths_by_month_data |>
  left_join(sc_avg_num_deaths_by_month_2018, by = "Month")

#### 2019 ####
sc_all_avg_num_deaths_by_month_data <- 
  sc_all_avg_num_deaths_by_month_data |>
  left_join(sc_avg_num_deaths_by_month_2019, by = "Month")

#### 2020 ####
sc_all_avg_num_deaths_by_month_data <-
  sc_all_avg_num_deaths_by_month_data |>
  left_join(sc_avg_num_deaths_by_month_2020, by = "Month") 

```

```{r}
#| echo: false
#| warning: false
#| label: tbl-avgnumofdeathsmonthsc
#| tbl-cap: "Average Number of Deaths Per Month from 2016-2020 at Scarborough"

#### Creating a Table to Demonstrate Average Number of Deaths Per Month From 2016-2020 at Scarborough Centre ####

sc_all_avg_num_deaths_by_month_data|>
  select(Month, "Average # of Deaths Registered.y","Average # of Deaths Registered.x.x", "Average # of Deaths Registered.y.y", "Average # of Deaths Registered.x.x.x", "Average # of Deaths Registered.y.y.y")|> #previous step created a duplicate column, use select() to remove the second column in dataset
  kable(
    col.names = c( #rename columns to be more meaningful
      "Month",
      "2016",
      "2017",
      "2018",
      "2019",
      "2020"
    ),
    digits = 0,
    booktabs = TRUE,
    linesep = "") |>
  add_header_above(c(" " = 1, "Average Number of Deaths" = 5)) |>
  kable_styling(full_width = TRUE)

```

```{r}
#| include: false

#### Creating Datasets for 5 Year Period by Month at North York Civic Centre ####

#### Repeat Process for Each Year (2016-2020) ####

#### 2016 ####
ny_avg_num_deaths_by_month_2016 <-cleaned_death_registry_data |>
  filter(Year == "2016" | civic_centre == "North York") |> #filter for year and civic centre
  group_by(Month) |> #group by month
  summarize("Average # of Deaths Registered" = mean(death_licenses)) #find average of death licenses given out 

#### 2017 ####
ny_avg_num_deaths_by_month_2017 <-cleaned_death_registry_data |>
  filter(Year == "2017" | civic_centre == "North York") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2018 ####
ny_avg_num_deaths_by_month_2018 <-cleaned_death_registry_data |>
  filter(Year == "2018" | civic_centre == "North York") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2019 ####
ny_avg_num_deaths_by_month_2019 <-cleaned_death_registry_data |>
  filter(Year == "2019" | civic_centre == "North York") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses)) 

#### 2020 ####
ny_avg_num_deaths_by_month_2020 <-cleaned_death_registry_data|>
  filter(Year == "2020" | civic_centre == "North York") |>
  group_by(Month) |> 
  summarize("Average # of Deaths Registered" = mean(death_licenses))



```

```{r}
#| include: false

#### Combining Datasets for 5 Year Period by Month at North York Civic Centre ####

#### After 1st Instance (2016), Repeat 2nd Instance Process for Each Year (2017-2020) ####

#### 2016 ####
ny_all_avg_num_deaths_by_month_data <- #new dataset
  ny_avg_num_deaths_by_month_2016 |> #start with first dataset in this spot
  left_join(ny_avg_num_deaths_by_month_2016, by = "Month") #use left_join() to combine dataset

#### 2017 ####
ny_all_avg_num_deaths_by_month_data <- 
  ny_all_avg_num_deaths_by_month_data |>#for second and all following datasets use "new" dataset in this position
  left_join(ny_avg_num_deaths_by_month_2017, by = "Month")

#### 2018 ####
ny_all_avg_num_deaths_by_month_data <- 
  ny_all_avg_num_deaths_by_month_data |>
  left_join(ny_avg_num_deaths_by_month_2018, by = "Month")

#### 2019 ####
ny_all_avg_num_deaths_by_month_data <- 
  ny_all_avg_num_deaths_by_month_data |>
  left_join(ny_avg_num_deaths_by_month_2019, by = "Month")

#### 2020 ####
ny_all_avg_num_deaths_by_month_data <-
  ny_all_avg_num_deaths_by_month_data |>
  left_join(ny_avg_num_deaths_by_month_2020, by = "Month") 
```

```{r}
#| echo: false
#| warning: false
#| label: tbl-avgnumofdeathsmonthny
#| tbl-cap: "Average Number of Deaths Per Month from 2016-2020 at North York Centre"

#### Creating a Table to Demonstrate Average Number of Deaths Per Month From 2016-2020 at North York Centre ####

ny_all_avg_num_deaths_by_month_data|>
  select(Month, "Average # of Deaths Registered.y","Average # of Deaths Registered.x.x", "Average # of Deaths Registered.y.y", "Average # of Deaths Registered.x.x.x", "Average # of Deaths Registered.y.y.y")|> #previous step created a duplicate column, use select() to remove the second column in dataset
  kable(
    col.names = c( #rename columns to be more meaningful
      "Month",
      "2016",
      "2017",
      "2018",
      "2019",
      "2020"
    ),
    digits = 0,
    booktabs = TRUE,
    linesep = "") |>
  add_header_above(c(" " = 1, "Average Number of Deaths" = 5)) |>
  kable_styling(full_width = TRUE)
```

\newpage

# References
